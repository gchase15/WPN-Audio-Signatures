%%Compile Music 
clear all; close all; clc

mainpath = 'C:\Users\gavin\Documents\MATLAB\ProjectData\Bursts\M4';
D=dir(fullfile(mainpath,'*.wav'));
dimensions = [1000 2000 4000];

%%  Construct Spectrogram images of music files
 numSeconds=.7;
 for r=1:3
    for j=1:numel(D)
         thisfile = fullfile(mainpath,D(j).name);
         [gunshotfile,fs] = audioread(fullfile(mainpath,D(j).name));
         shortgunshot = gunshotfile(1:(numSeconds*fs),:);
         aveshot = [];
         %This mini for loop averages the stereo sound to produce a mono
         %sound. 
         for k=1:size(shortgunshot,1)
             aveshot = [aveshot; mean(shortgunshot(k,:))];
         end
         aveshot = aveshot';
         nclip = length(aveshot);
         L = length(aveshot)/fs;
         tp2=linspace(0,L,nclip+1); 
         tp=tp2(1:nclip);
         if rem(length(aveshot),2) == 0
             kp=(2*pi/L)*[0:nclip/2-1 -nclip/2:-1];
             kps=fftshift(kp);
         else
             kp=(2*pi/L)*[0:nclip/2 -nclip/2:-1];
             kps=fftshift(kp);
         end      
%          figure(13)
%          plot((1:length(aveshot))/fs,aveshot); 
%          xlabel('Time [sec]'); 
%          ylabel('Amplitude');
%          title('Gunshot'); 
%          drawnow 
%          p8 = audioplayer(aveshot,fs);
%          playblocking(p8);           
     width=414;
    step=zeros(1,length(tp));
    mask=ones(1,2*width+1);
    Shotstept_spec=[]; 
    tslide=(width+1):300:(length(step)-width);
    for z=1:length(tslide)
         step=zeros(1,length(tp));
         step(tslide(z)-width:1:tslide(z)+width)=mask;
         Shotstep=step.*aveshot; 
         Shotstept=fft(Shotstep); 
         Shotstept_spec=[Shotstept_spec; 
         abs(fftshift(Shotstept))];     
%          figure(1)
%          subplot(3,1,1), plot(tp,resampGunshot,'k',tp,step,'r')
%           xlabel('Time [sec]'); 
%           ylabel('Amplitude'); 
%           subplot(3,1,2), plot(tp,Shotstep,'k')
%           xlabel('Time [sec]'); 
%           ylabel('Amplitude'); 
%           subplot(3,1,3), plot(kps/(2*pi),abs(fftshift(Shotstept))/max(abs(Shotstept))) 
%           xlabel('Frequency [Hz]'); 
%           ylabel('|FFT(v)|')
%           axis([-1200 1200 0 1])
%           drawnow
    end
scales = [1 2 4];
tslidep=linspace(0,L,length(tslide));
f=figure('visible', false);
pcolor(tslidep,kps/(2*pi),Shotstept_spec.'), 
shading interp 
set(gca,'Ylim',[0 dimensions(r)],'Fontsize',[14]) 
ylabel('Frequency [Hz]'); 
xlabel('Time [sec]'); 
colormap(hsv)
newFileNameChar = 'M4Bursts' + string(scales(r)) + 'k' + string(j) + '.jpg';
print(newFileNameChar,'-djpeg'); 
close(f)         
         
filescomplete = j
    end
    fileSetFinished = r
 end
      
    
    %% Reduce White Space on JPEGs
    
 mainpath = 'C:\Users\gavin\Documents\MATLAB\ProjectData\Bursts\FAL\1k spectrograms';
D=dir(fullfile(mainpath,'*.jpg'));   
%     figure(8)
    for j=1:numel(D)
        thisfile = fullfile(mainpath,D(j).name);
        SpectroImg = imread(fullfile(mainpath,D(j).name));
        SpectroGray = double(rgb2gray(SpectroImg));
        SpectroCrop = SpectroGray(75:584,120:785);
%         imshow(uint8(SpectroCrop))
%         pause(.2)
        newFileName = split(thisfile,".");
        filename = string(newFileName(1,1));
        newFileNameChar = filename + '_cropped.jpg';
        imwrite(uint8(SpectroCrop),newFileNameChar); 
    end
    
    
    
    
    
    
    
    
    
    